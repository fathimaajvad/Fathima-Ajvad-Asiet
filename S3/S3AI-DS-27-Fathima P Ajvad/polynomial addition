//pgm to add 2 polynomials
//Fathima P Ajvad
//Roll no: 27
#include<stdio.h>

/*declare structure for a polynomial*/
struct poly
{
   int coeff;
   int expo;
};


/* declare three arrays p1,p2,p3 of type structure poly
   each polynomial can have maximum of ten terms
   addition result of p1 and p2 is stored in p3*/
  struct poly p1[10],p2[10],p3[10];
  
  
/*function prototypes*/
  int readpoly(struct poly[]);
  int addpoly(struct poly[],struct poly[],int,int,struct poly[]);
  void displaypoly(struct poly[],int terms);
  
  
  
int main()
{
  int t1,t2,t3;
  
/*read and display first polynomial*/
  t1=readpoly(p1);
  printf("\n first polynomial:");
  displaypoly(p1,t1);
  t2=readpoly(p2);
  printf("\n second polynomial:");
  displaypoly(p2,t2);
  
/*add two polynomials and display resultant polynomial*/
  t3=addpoly(p1,p2,t1,t2,p3);
  printf("\n\nresultant polynomial after addition:");
  displaypoly(p3,t3);
  printf("\n");
  
  return 0;
}



int readpoly(struct poly p[10])
{
  int t1,i;
  printf("\n\n enter the total number of terms in the polynomial:");
  scanf("%d",&t1);
  printf("\n enter the coefficient and exponenets in the descending order\n");
  for(i=0;i<t1;i++)
  {
    printf("enter the coefficient(%d):",i+1);
    scanf("%d",&p[i].coeff);
    printf("enter the exponent(%d):",i+1);
    scanf("%d",&p[i].expo);/*only statement in loop*/
  }
  return(t1);
}



int addpoly(struct poly p1[10],struct poly p2[10],int t1,int t2,struct poly p3[10])
{
  int i,j,k;
  i=0;j=0;k=0;
  while(i<t1&&j<t2)
  {
    if(p1[i].expo==p2[j].expo)
    {
       p3[k].coeff=p1[i].coeff+p2[j].coeff;
       p3[k].expo=p1[i].expo;
       i++;
       k++;
       j++;
    }
    else if(p1[i].expo>p2[j].expo)
    {
       p3[k].coeff=p1[i].coeff;
       p3[k].expo=p1[i].expo;
       i++;
       k++;
    }
    else
    {
       p3[k].coeff=p2[j].coeff;
       p3[k].expo=p2[j].expo;
       j++;
       k++;
    }
  }
  
  
 /*for rest over terms of polynomial 1*/
  while(i<t1)
  {
    p3[k].coeff=p1[i].coeff;
    p3[k].expo=p1[i].expo;
    i++;
    k++;
  }
  
/*for rest over terms of polynomial 2*/
  while(j<t2)
  {
    p3[k].coeff=p2[j].coeff;
    p3[k].expo=p2[j].expo;
    j++;
    k++;
  }
  return (k);/*k is no: of terms in resultant polynomial*/
}



void displaypoly(struct poly p[10],int term)
{
  int k;
  for(k=0;k<term-1;k++)
  printf("%d(x^%d)+",p[k].coeff,p[k].expo);
  printf("%d(x^%d)+",p[term-1].coeff,p[term-1].expo);
}
